// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostStatic struct {
	pulumi.CustomResourceState

	// The static address of the host resource as `<IP>` (note: port assignment occurs in the target resource definition, do
	// not add :port here) or a domain name.
	Address pulumi.StringPtrOutput `pulumi:"address"`
	// The host description.
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	HostCatalogId pulumi.StringOutput    `pulumi:"hostCatalogId"`
	// The host name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of host
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewHostStatic registers a new resource with the given unique name, arguments, and options.
func NewHostStatic(ctx *pulumi.Context,
	name string, args *HostStaticArgs, opts ...pulumi.ResourceOption) (*HostStatic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostCatalogId == nil {
		return nil, errors.New("invalid value for required argument 'HostCatalogId'")
	}
	var resource HostStatic
	err := ctx.RegisterResource("boundary:index/hostStatic:HostStatic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostStatic gets an existing HostStatic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostStatic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostStaticState, opts ...pulumi.ResourceOption) (*HostStatic, error) {
	var resource HostStatic
	err := ctx.ReadResource("boundary:index/hostStatic:HostStatic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostStatic resources.
type hostStaticState struct {
	// The static address of the host resource as `<IP>` (note: port assignment occurs in the target resource definition, do
	// not add :port here) or a domain name.
	Address *string `pulumi:"address"`
	// The host description.
	Description   *string `pulumi:"description"`
	HostCatalogId *string `pulumi:"hostCatalogId"`
	// The host name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The type of host
	Type *string `pulumi:"type"`
}

type HostStaticState struct {
	// The static address of the host resource as `<IP>` (note: port assignment occurs in the target resource definition, do
	// not add :port here) or a domain name.
	Address pulumi.StringPtrInput
	// The host description.
	Description   pulumi.StringPtrInput
	HostCatalogId pulumi.StringPtrInput
	// The host name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The type of host
	Type pulumi.StringPtrInput
}

func (HostStaticState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostStaticState)(nil)).Elem()
}

type hostStaticArgs struct {
	// The static address of the host resource as `<IP>` (note: port assignment occurs in the target resource definition, do
	// not add :port here) or a domain name.
	Address *string `pulumi:"address"`
	// The host description.
	Description   *string `pulumi:"description"`
	HostCatalogId string  `pulumi:"hostCatalogId"`
	// The host name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The type of host
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a HostStatic resource.
type HostStaticArgs struct {
	// The static address of the host resource as `<IP>` (note: port assignment occurs in the target resource definition, do
	// not add :port here) or a domain name.
	Address pulumi.StringPtrInput
	// The host description.
	Description   pulumi.StringPtrInput
	HostCatalogId pulumi.StringInput
	// The host name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The type of host
	Type pulumi.StringPtrInput
}

func (HostStaticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostStaticArgs)(nil)).Elem()
}

type HostStaticInput interface {
	pulumi.Input

	ToHostStaticOutput() HostStaticOutput
	ToHostStaticOutputWithContext(ctx context.Context) HostStaticOutput
}

func (*HostStatic) ElementType() reflect.Type {
	return reflect.TypeOf((**HostStatic)(nil)).Elem()
}

func (i *HostStatic) ToHostStaticOutput() HostStaticOutput {
	return i.ToHostStaticOutputWithContext(context.Background())
}

func (i *HostStatic) ToHostStaticOutputWithContext(ctx context.Context) HostStaticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostStaticOutput)
}

// HostStaticArrayInput is an input type that accepts HostStaticArray and HostStaticArrayOutput values.
// You can construct a concrete instance of `HostStaticArrayInput` via:
//
//          HostStaticArray{ HostStaticArgs{...} }
type HostStaticArrayInput interface {
	pulumi.Input

	ToHostStaticArrayOutput() HostStaticArrayOutput
	ToHostStaticArrayOutputWithContext(context.Context) HostStaticArrayOutput
}

type HostStaticArray []HostStaticInput

func (HostStaticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostStatic)(nil)).Elem()
}

func (i HostStaticArray) ToHostStaticArrayOutput() HostStaticArrayOutput {
	return i.ToHostStaticArrayOutputWithContext(context.Background())
}

func (i HostStaticArray) ToHostStaticArrayOutputWithContext(ctx context.Context) HostStaticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostStaticArrayOutput)
}

// HostStaticMapInput is an input type that accepts HostStaticMap and HostStaticMapOutput values.
// You can construct a concrete instance of `HostStaticMapInput` via:
//
//          HostStaticMap{ "key": HostStaticArgs{...} }
type HostStaticMapInput interface {
	pulumi.Input

	ToHostStaticMapOutput() HostStaticMapOutput
	ToHostStaticMapOutputWithContext(context.Context) HostStaticMapOutput
}

type HostStaticMap map[string]HostStaticInput

func (HostStaticMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostStatic)(nil)).Elem()
}

func (i HostStaticMap) ToHostStaticMapOutput() HostStaticMapOutput {
	return i.ToHostStaticMapOutputWithContext(context.Background())
}

func (i HostStaticMap) ToHostStaticMapOutputWithContext(ctx context.Context) HostStaticMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostStaticMapOutput)
}

type HostStaticOutput struct{ *pulumi.OutputState }

func (HostStaticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostStatic)(nil)).Elem()
}

func (o HostStaticOutput) ToHostStaticOutput() HostStaticOutput {
	return o
}

func (o HostStaticOutput) ToHostStaticOutputWithContext(ctx context.Context) HostStaticOutput {
	return o
}

// The static address of the host resource as `<IP>` (note: port assignment occurs in the target resource definition, do
// not add :port here) or a domain name.
func (o HostStaticOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostStatic) pulumi.StringPtrOutput { return v.Address }).(pulumi.StringPtrOutput)
}

// The host description.
func (o HostStaticOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostStatic) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o HostStaticOutput) HostCatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostStatic) pulumi.StringOutput { return v.HostCatalogId }).(pulumi.StringOutput)
}

// The host name. Defaults to the resource name.
func (o HostStaticOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HostStatic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of host
func (o HostStaticOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostStatic) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type HostStaticArrayOutput struct{ *pulumi.OutputState }

func (HostStaticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostStatic)(nil)).Elem()
}

func (o HostStaticArrayOutput) ToHostStaticArrayOutput() HostStaticArrayOutput {
	return o
}

func (o HostStaticArrayOutput) ToHostStaticArrayOutputWithContext(ctx context.Context) HostStaticArrayOutput {
	return o
}

func (o HostStaticArrayOutput) Index(i pulumi.IntInput) HostStaticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostStatic {
		return vs[0].([]*HostStatic)[vs[1].(int)]
	}).(HostStaticOutput)
}

type HostStaticMapOutput struct{ *pulumi.OutputState }

func (HostStaticMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostStatic)(nil)).Elem()
}

func (o HostStaticMapOutput) ToHostStaticMapOutput() HostStaticMapOutput {
	return o
}

func (o HostStaticMapOutput) ToHostStaticMapOutputWithContext(ctx context.Context) HostStaticMapOutput {
	return o
}

func (o HostStaticMapOutput) MapIndex(k pulumi.StringInput) HostStaticOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostStatic {
		return vs[0].(map[string]*HostStatic)[vs[1].(string)]
	}).(HostStaticOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostStaticInput)(nil)).Elem(), &HostStatic{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostStaticArrayInput)(nil)).Elem(), HostStaticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostStaticMapInput)(nil)).Elem(), HostStaticMap{})
	pulumi.RegisterOutputType(HostStaticOutput{})
	pulumi.RegisterOutputType(HostStaticArrayOutput{})
	pulumi.RegisterOutputType(HostStaticMapOutput{})
}
